{"version":3,"sources":["Components/Layout/Layout.js","Components/Section/Section.js","Components/AddContactsForm/AddContactsForm.js","Components/ContactsList/ContactsList.js","Components/ContactFinder/ContactFinder.js","Components/App.js","index.js"],"names":["Layout","children","Section","title","className","AddForm","state","name","number","handleNameChange","e","setState","target","value","handleNumberChange","handleSubmit","preventDefault","console","log","props","onAddContact","this","onSubmit","type","onChange","Component","ContactsList","contacts","onRemove","map","id","key","onClick","ContactFinder","onChangeFilter","App","filter","addContact","contact","uuidv4","find","toLowerCase","alert","prevState","findContact","getVisibleTask","includes","RemoveContact","contactId","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7eec356.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Layout.css'\r\n\r\nexport default function Layout ({children}) {\r\nreturn (\r\n    <div>{children}</div>\r\n)\r\n}","import React from 'react'\r\nimport './Section.css'\r\n\r\nexport default function Section ({title, children}) {\r\nreturn (\r\n    <section className = 'Section'> {title} {children} </section>\r\n)\r\n}","import React, { Component } from 'react';\r\nimport './AddContactsForm.css';\r\n\r\nexport default class AddForm extends Component {\r\n  state = {\r\n    // contacts: [],\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleNameChange = e => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  handleNumberChange = e => {\r\n    this.setState({ number: e.target.value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n\r\n    this.props.onAddContact(this.state);\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"AddContactsForm\">\r\n        <label>\r\n          Name{' '}\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.handleNameChange}\r\n            className=\"AddContactsForm__Name\"\r\n            name=\"name\"\r\n          ></input>\r\n        </label>\r\n\r\n        <label>\r\n          Number{' '}\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            onChange={this.handleNumberChange}\r\n            className=\"AddContactsForm__Number\"\r\n            name=\"number\"\r\n          ></input>\r\n        </label>\r\n\r\n        <button type=\"submit\" className=\"AddContactsForm__button\">\r\n          {' '}\r\n          Add contacts\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './ContactsList.css';\r\n\r\nfunction ContactsList({ contacts, onRemove }) {\r\n  return (\r\n    <ul className=\"ContactsList\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className=\"ContactsList--item\">\r\n          <div>\r\n            {name}: {number}\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onRemove(id)}\r\n            className=\"ContactsListItem-button\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n\r\n        // <ContactsListItem\r\n\r\n        //   name={name}\r\n        //   number={number}\r\n        //   onRemove={() => onRemoveTask(id)}\r\n        // />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactsList;\r\n","import React from 'react';\r\nimport './ContactFinder.css';\r\n\r\nexport default function ContactFinder({ value, onChangeFilter }) {\r\n  return (\r\n    <label className=\"ContactFinder\">\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        className=\"ContactFinder-input\"\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\nimport Layout from './Layout/Layout';\nimport Section from './Section/Section';\nimport AddContactsForm from './AddContactsForm/AddContactsForm';\nimport ContactsList from './ContactsList/ContactsList';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactFinder from './ContactFinder/ContactFinder';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    name: '',\n    number: '',\n    filter: '',\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem('contacts');\n\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    const duplicateName = this.state.contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (duplicateName) {\n      alert(`${name} is already in contacts.`);\n\n      return;\n    }\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  findContact = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getVisibleTask = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  RemoveContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(\n          contact => contact.id !== contactId,\n        ),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleTask();\n    // const onRemove = this.onRemove();\n    return (\n      <Layout>\n        <Section title=\"Phonebook\">\n          <AddContactsForm onAddContact={this.addContact}></AddContactsForm>\n        </Section>\n        <Section title=\"Contacts\">\n          <ContactFinder\n            contacts={visibleContacts}\n            value={filter}\n            onChangeFilter={this.findContact}\n          ></ContactFinder>\n          <ContactsList\n            contacts={visibleContacts}\n            onRemove={this.RemoveContact}\n          ></ContactsList>\n        </Section>\n      </Layout>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}